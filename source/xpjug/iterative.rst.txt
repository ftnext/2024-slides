イテレーティブ
======================================================================

iterative = 反復

.. 見通せないときの話。進んで初めて見通せるケース

より腑に落ちた「常に次回がある」
------------------------------------------------------------

* 『アート・オブ・アジャイル デベロップメント』はふりかえりのトピックを *コイン投げ* で決める

『アート・オブ・アジャイル デベロップメント』5.5.6
------------------------------------------------------------

    （※1つのカテゴリに人気が集中していなくても）、時間をかけすぎてはいけない。コインか何かを投げて 1 つのカテゴリを選ぼう。

Shoreさん、コイン投げで決めていいんですか？
------------------------------------------------------------

    来週もふりかえりをするんだ。重要な問題であれば、また出てくるだろう。(p.101)

トピックを話す方に時間を使う考え方、なるほどな〜

明日もブログを書くんだ
------------------------------------------------------------

* 今日技術ネタを絶対書かなければいけないわけじゃない
* 毎日まで **頻度を上げた** ことで、趣味や暮らし向きなど書けるようになった

.. 頻度が高ければ「届ける価値が小さいのではないか」という不安が小さくなっていくのでは

余談『小さな習慣』
------------------------------------------------------------

* 毎日たった1回の腕立て伏せ
* 簡単すぎる目標だが、1回やると調子が出てきて超過達成できる
* 簡単すぎるので、できないということがない（継続しやすい）

.. 作業興奮も似ているかも

『継続的デリバリー』（至言）
======================================================================

    ソフトウェアの世界では、何か痛みを伴うものがあった場合にその痛みを軽減する方法は、もっとこまめに行うことだけだ。(Kindle版 p.62)

.. _小さく区切って絶えずやる: https://nikkie-ftnext.hatenablog.com/entry/my-practices-small-and-repeatedly#1%E6%97%A51%E3%82%A8%E3%83%B3%E3%83%88%E3%83%AA

`小さく区切って絶えずやる`_ （nikkie）
------------------------------------------------------------

ただし、小さなネタだとしても全力で
------------------------------------------------------------

* 品質は決して妥協しない

.. 『エクストリームプログラミング』5.12

誤りへの指摘のとらえ方
------------------------------------------------------------

* どこかで出さないといけないし、人間だから誤りはある
* 誤りの指摘への恐怖
* 追記で対応したり、指摘内容について考えるエントリを書いたりすればいいと考えている

.. 誤っていたら何を言ってもいいみたいな風潮
