クラスをどう使うかを知る
======================================================================

.. 部品についてのパート

* 小さい部品？ 関数は任せて！
* クラス？ うっ...

ずっと分からなかった、クラスの使い所
--------------------------------------------------

* nikkieは、（必ずクラスを書く）Javaの経験がありません

  * 関数でも書ける言語を使ってきた（PHP、Python）

* 「文法は完全に理解したが、 **クラスはどんな時に使うの？**」

クラスの文法を説明する例：犬
--------------------------------------------------

.. code-block:: python

    class Dog:
        kind = 'canine'  # クラス変数

        def __init__(self, name):
            self.name = name  # インスタンス変数

`Python チュートリアル「9.3.5. クラスとインスタンス変数」 <https://docs.python.org/ja/3/tutorial/classes.html#class-and-instance-variables>`__

よい構造のコードとしてのクラスの例（ミノ駆動本 2章）
------------------------------------------------------------

    強く関係し合うデータとロジックを一箇所にギュッと集めておく (Kindle版 p.51)

* ヒットポイント
* ダメージを受ける
* 回復する

Pythonでの実装例
------------------------------------------------------------

.. code-block:: python

    class HitPoint:
        MIN: Final[int] = 0
        MAX: Final[int] = 999

        def __init__(self, value: int) -> None:
            if value < self.MIN:
                raise ValueError(f"{self.MIN}以上を指定してください")
            if value > self.MAX:
                raise ValueError(f"{self.MAX}以下を指定してください")

            self.value = value

        def damage(self, damage_amount: int) -> HitPoint:
            # 省略

        def recover(self, recovery_amount: int) -> HitPoint:
            # 省略

`実装の全体 <https://github.com/ftnext/exile-of-the-wicked-py/blob/ef07c9a870013580b240f9a6d05f0d4dbecb9a88/chapter2/first_step.py>`__

クラスは **データとロジックをまとめる**
------------------------------------------------------------

* 文法を学べば、処理系が動作するクラスは書ける
* コードの構造としてよいクラスも悪いクラスも、同様に動作してしまう
* 良し悪しの **判断基準** 「まとめているか」（過去の私はこれが持てていなかった）

データだけのクラスに注意
------------------------------------------------------------

* ロジックを持たない
* データクラスとして知られる悪しき構造（私はよくやってました）

増田本 第3章・ミノ駆動本 第1章

まとめることで、クラスを使う側に *楽* をさせる
------------------------------------------------------------

* 増田本 第1章

    使う側のプログラムの記述がかんたんになるように、使われる側のクラスに便利なメソッドを用意する (Kindle版 p.54)

* 「コーヒーください」（ななうぇぶさん `Tell, don't ask <https://speakerdeck.com/77web/tell-dont-ask>`__
