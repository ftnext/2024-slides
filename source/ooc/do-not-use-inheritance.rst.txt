2️⃣クラスの継承
======================================================================

    *ここで野球をしてはいけません*

.. https://twitter.com/imasml_theater/status/1715897758924870031

『`達人プログラマー（第2版）`_』より
--------------------------------------------------

第5章に「インヘリタンス（相続）税」

    継承が答えになることは滅多にない (Kindle版 p.380)

継承の代わりに
--------------------------------------------------

* 型情報の共有には、 **インターフェース** （やプロトコル）を

『`達人プログラマー（第2版）`_』より

セルフわからん殺し：ほしかったのはインターフェース
------------------------------------------------------------

* （インターフェースとしての）抽象基底クラスで始めた
* 同時にTemplate Methodパターンも導入（あれ、インターフェース？）

.. code-block:: python

    class DoNotUseThisExample(metaclass=abc.ABCMeta):
        def method(self, ...):  # インターフェースのはずが
            # 省略
            retval = self.process(...)
            # 省略

        @abc.abstractmethod
        def process(self, ...):  # 穴空き問題にする（Template Method）
            raise NotImplementedError

わからん殺しされて言える「気軽に継承してはいけません」
------------------------------------------------------------

* 穴埋め問題（``process`` の実装）に落とし込めないケースが後から登場🤯
* **インターフェースが別で定義されていない** のが痛い。穴埋め問題で吸収できないと全体を修正せざるを得ない

.. （Pythonではクラスの継承でインターフェースを表す部分の理解不足もあります）

継承の代わりに（もう一つ）
------------------------------------------------------------

* 機能の追加には、 **委譲** を

『`達人プログラマー（第2版）`_』より

委譲した例
------------------------------------------------------------

* 直近公開したOSS `kurenai <https://pypi.org/project/kurenai/>`__ （紅）
* google-researchの `rouge-score <https://pypi.org/project/rouge-score/>`__ のラッパー
* デフォルトで日本語テキストからもROUGEという指標を算出したい

rouge-scoreとインターフェースを揃えつつ、日本語対応という機能追加
----------------------------------------------------------------------

.. code-block:: pycon
    :emphasize-lines: 5-8

    >>> from rouge_score.rouge_scorer import RougeScorer
    >>> scorer = RougeScorer(["rouge1"])
    >>> scorer.score('いぬ ねこ', 'いぬ ねこ')
    {'rouge1': Score(precision=0.0, recall=0.0, fmeasure=0.0)}
    >>> from kurenai.rouge_scorer import RougeScorer
    >>> scorer = RougeScorer(["rouge1"])
    >>> scorer.score('いぬ ねこ', 'いぬ ねこ')
    {'rouge1': Score(precision=1.0, recall=1.0, fmeasure=1.0)}

rouge-score.RougeScorerの継承でなく、 **委譲** する
----------------------------------------------------------------------

.. code-block:: python
    :linenos:

    class RougeScorer(BaseScorer):  # 本家RougeScorerと同じインターフェース（scoreメソッド持つ）
        def __init__(self, rouge_types: list[str]) -> None:
            self._scorer = OriginalRougeScorer(
                rouge_types, tokenizer=AllCharacterSupportTokenizer()
            )

        def score(self, target, prediction):  # 委譲による実装
            return self._scorer.score(target, prediction)

https://github.com/ftnext/kurenai/blob/v0.0.1/src/kurenai/rouge_scorer.py#L9-L16
