テストコードが書けるメリット
============================================================

壊してないかなという不安に向き合う
============================================================

* 変更しやすいコード（＝本トークにおける良いコード）に近づけていく
* 例：よりよい書き方を知り、それに書き換える
* 変更するたびに、壊していないか不安

例：FizzBuzz
--------------------------------------------------

.. literalinclude:: ../../samplecode/phpunit-example/concept/fizzbuzz_old.php
    :language: php

型を書く
--------------------------------------------------

.. literalinclude:: ../../samplecode/phpunit-example/concept/fizzbuzz.php
    :language: php

書き換えで振る舞いを変えていないだろうか？
============================================================

**不安** に対処するいくつかのアプローチ

(A) 祈る 🙏
--------------------------------------------------

* 🙏🙏「どうか変わっていませんように」🙏🙏
* 振る舞いを変えていないか不安だが、 *何も確認はしない*

(B) 手で動作確認 ✋
--------------------------------------------------

* 例えば対話的に ``fizzbuzz`` 関数を実行（:command:`php -a`）

.. code-block:: php

    php > include 'fizzbuzz.php';
    php > echo fizzbuzz(15);
    FizzBuzz

* 安心できるが、 *関数の数が増えて* いくと現実的ではなさそう
