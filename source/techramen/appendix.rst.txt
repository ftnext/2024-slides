Appendix
========

本編に盛り込みきれなかった項目を

Pythonのスタンス
--------------------------------------------------

    例え完璧を目指さなくても、アーリー・アダプターの人たちの目的を達成するのに、Pythonは「十分に良い」働きをしてきた。ユーザ基盤が成長してくるにつれて、ユーザから出される改善要望が徐々に言語に取り込まれてきた。

`Python's Design Philosophy の日本語訳 <https://python-history-jp.blogspot.com/2009/04/python.html>`__

依存ライブラリ管理についてnikkieの意見
--------------------------------------------------

* スクリプトならば **pipx** （PEP 723サポートは快適すぎる！）
* Pythonに慣れていなくてプロジェクト開発するならば、Pythonのバージョンや仮想環境がラップされるRye
* Pythonで仮想環境管理した経験があってプロジェクト開発するならば、好きなのはHatchだが、Poetryでも **なんでもいい** と思う（Ryeという流行りは無理に乗らなくていいのでは）

.. https://x.com/ftnext/status/1778998274743239078

Python自体の管理方法もさまざま
--------------------------------------------------

* 本編で紹介：python.org からのインストール
* 本編で紹介：RyeやHatchでもできる
* python.org の他に使われてきたのは `pyenv <https://github.com/pyenv/pyenv>`__
* 最近だと `mise <https://github.com/jdx/mise>`__ の体験がいいと聞く
