注目している依存ライブラリ管理ツール
======================================================================

* Ryeは期待が過度にも見える
* 私がいま注目しているのは *Hatch*

Hatch
--------------------------------------------------

* Python実装だが、インストールに **Python環境は不要** （インストーラあり）
* Python処理系のバージョンを管理できる
* 仮想環境も管理

Hatchを使ったプロジェクト
--------------------------------------------------

* 依存ライブラリは :file:`pyproject.toml` に書く（だけ）
* （このファイルは `PEP 518 <https://peps.python.org/pep-0518/>`__ で導入。普及してきた）

.. code-block:: toml

    [project]
    dependencies = ["kojo-fan-art"]

まるでCargoのよう
--------------------------------------------------

* 記載した依存をインストールするためにコマンドを叩く必要はない
* **Hatchがインストールした仮想環境を用意** してくれる

.. code-block:: toml
    :caption: Cargo.toml

    [dependencies]

    [dev-dependencies]
    assert_cmd = "2"

.. revealjs-break::
    :notitle:

.. list-table::
    :header-rows: 1
    :widths: 65 15 20

    * - 項目
      - Rye
      - Hatch
    * - インストールにPythonが
      - 不要
      - どちらでも
    * - Pythonを管理
      - する
      - する
    * - ライブラリ（仮想環境）管理
      - する
      - する
    * - ロックファイル
      - ばっちり
      - ゆるめ

.. pyproject.toml には requirements.txt ほど細かく記載しないので、ライブラリのバージョンまで完全に再現させない

ℹ️Hatchの参考情報 🏃‍♂️
--------------------------------------------------

* Python Monthly Topics `最近気になるツール「Hatch」でPythonプロジェクトを管理する <https://gihyo.jp/article/2024/05/monthly-python-2405>`__
* 拙ブログ `素振りの記：自分だけのクソライブラリ作りを通して、Hatchの機能に触れる <https://nikkie-ftnext.hatenablog.com/entry/practice-python-hatch-with-trivial-library>`__

**スクリプト** に限定した仮想環境
======================================================================

IMO：ちょっとした自動化のPythonスクリプトを書く場合、2024年時点ではRyeやHatchまで持ち出さなくてもよい

pipx (PEP 723 サポート)
--------------------------------------------------

スクリプトの先頭に **依存ライブラリを示すメタデータ** を書く（だけ）

.. code-block:: python

    # /// script
    # dependencies = ["openai"]
    # ///

`PEP 723 – Inline script metadata <https://peps.python.org/pep-0723/>`__

pipx
--------------------------------------------------

* インストール https://pipx.pypa.io/stable/installation/
* PEP 723サポート＝ **スクリプトに必要な依存を含む仮想環境をpipxが管理** （開発者を解放🙌）
* 詳しくはこちらをどうぞ：`Pythonスクリプトのモジュラリティとポータビリティを高めていく <https://tech.uzabase.com/entry/2024/06/07/180442>`__
