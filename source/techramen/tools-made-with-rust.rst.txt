**Rust** 製ツールが高速を謳う
======================================================================

BREAKING NEWS!! Rustで実装した仮想環境管理ツールが登場

Rust製ツール
--------------------------------------------------

:Rye: ライブラリだけでなくPythonもバージョン管理できる。注目&期待されている
:uv: Rustで実装したpip（Ryeも使用）

Ryeはこんなツール
--------------------------------------------------

* インストールに **Python環境は不要** （rustup のよう）
* RyeはPython処理系のバージョンを管理できる
* 仮想環境も管理

Ryeを使ったプロジェクト
--------------------------------------------------

* 依存ライブラリの追加は :command:`rye add`
* RyeがPythonのバージョンや仮想環境も管理（Ryeしか意識しない）
* さらに :file:`requirements.lock` も管理

Ryeを使ったプロジェクトの再現
--------------------------------------------------

* :command:`rye sync` （以上！）
* Pythonのバージョンや、仮想環境が再現される
* 詳しくは https://rye.astral.sh/guide/basics/

RyeはPythonの仮想環境に **提案** している
======================================================================

* :file:`requirements.lock` を自動管理
* 開発者に触らせない

:file:`requirements.lock` 自動管理
--------------------------------------------------

* 人力で任意とはおさらば
* **確実** に :file:`requirements.txt` 相当ができ、そこに **全ての依存が記載** される
* Ryeが仮想環境の状態を表すことで、再現しやすさにつながる

開発者に仮想環境を触らせない
--------------------------------------------------

* Ryeが作った仮想環境には **pipがない**
* （仮想環境管理ツール、俺たちで見たような）開発者が仮想環境に追加でインストールができない
* 開発者が触れないことで、:file:`requirements.lock` と一致を保てる

.. revealjs-break::
    :notitle:

.. list-table::
    :header-rows: 1

    * - 項目
      - Poetry
      - Rye
    * - インストールにPythonが
      - 必要
      - 不要
    * - Pythonを管理
      - しない
      - する
    * - ライブラリ（仮想環境）管理
      - する
      - する
    * - ロックファイル
      - 独自仕様
      - ``pip freeze`` 相当

ℹ️拙ブログより Rye 🏃‍♂️
--------------------------------------------------

* `素振りの記：Ryeに慣れるために、Pythonで自分だけのクソライブラリを作る <https://nikkie-ftnext.hatenablog.com/entry/practice-python-rye-with-trivial-library>`__
* `pipのない仮想環境にもかかわらず、Ryeがpip-syncできる"魔法"を理解する <https://nikkie-ftnext.hatenablog.com/entry/rye-magic-pip-sync-at-no-pip-virtual-environment>`__

  * この方法を使えば、開発者もRyeの仮想環境にインストールできちゃいます
